version: '3.4'

networks:
  monitoring-system:
    external: true
    name: "${PROJECT}"

services:

  rabbitmq:
    image: rabbitmq:3.9.29
    container_name: rabbitmq
    user: "${UID}:${GID}"
    restart: on-failure
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - "${PROJECT}"

  postgres:
    image: postgres:15.2
    container_name: postgres
    restart: on-failure
    environment:
      POSTGRES_USER: guest
      POSTGRES_PASSWORD: guest
    volumes:
      - ${HOST_PWD}/monitoring_system/db/init-database.sh:/docker-entrypoint-initdb.d/init-database.sh
    networks:
      - "${PROJECT}"

  redis:
    image: redis:6.0
    container_name: redis
    restart: on-failure
    volumes:
      - /var/log/redis:/var/log/redis
    healthcheck:
      test: redis-cli ping = "PONG"
      interval: 10s
      timeout: 5s
      retries: 5
    command: --save 30 1
    networks:
      - "${PROJECT}"

  file-generator-worker:
    image: monitoring-system
    build:
      target: monitoring-system
    depends_on:
      - rabbitmq
      - redis
    container_name: file-generator-worker
    volumes:
      - /tmp:/tmp
    environment:
      METHOD: file-generator-worker
      CELERY_DIR: /tmp/monitoring_system/celery
    restart: on-failure
    networks:
      - "${PROJECT}"

  redis-setter-worker:
    image: monitoring-system
    build:
      target: monitoring-system
    depends_on:
      - rabbitmq
      - redis
      - postgres
    container_name: redis-setter-worker
    environment:
      METHOD: redis-setter
    restart: on-failure
    networks:
      - "${PROJECT}"

  backup-tasks-to-db:
    image: monitoring-system
    build:
      target: monitoring-system
    depends_on:
      - rabbitmq
      - redis
      - postgres
    container_name: backup-tasks-to-db-worker
    environment:
      METHOD: backup-tasks-to-db
    restart: on-failure
    networks:
      - "${PROJECT}"

  celery-beat:
    image: monitoring-system
    build:
      target: monitoring-system
    depends_on:
      - rabbitmq
      - redis
      - postgres
      - file-generator-worker
    container_name: celery-beat
    environment:
      METHOD: beat
    restart: on-failure
    networks:
      - "${PROJECT}"
